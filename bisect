#bisect put the element at their univerasal position without giving the index of the inserting element
#same gose for insort is also put the element at the appropriate position but make the list shortred





#							bisect() function

import bisect

print()
li= [0,1,2,3,4,6]
#using bisect to find index to insert new element
#bisect(li, num, beg, end)
print("The rightmost index to insert, so list remains sorted is : ", end="")
print (bisect.bisect(li, 4))

# using bisec_left() to find index to inser new element
print("The leftmost index to insert, so the list remains sorted is :", end="")
print(bisect.bisect_left(li, 4))
print()
# 							insort() function

import bisect

li1 = [1,3,5,7,9]
li2 = [4,2,8,6,0]

#using insort() to insert 5 at appropriate position
#insert(list, munber, beggining, end)
bisect.insort(li1,5,2)

print("The list after inserting new element using insort() is: ",end="")
for i in range(0,5):
	print(li1[i], end="")
print()


li2.sort()

#uisng insort_left() to insert 6 
bisect.insort_left(li2, 6)

print("The list after inserting the element :", end="")

for i in range(0,6):
	print(li2[i], end="")
print()
