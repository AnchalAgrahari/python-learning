

#increment{x+} and decrement(x-)					//do not use x++ or x--

x =3
x+=2
print(x)
x-=1
print(x)

print(" ")

#division "/","//"					"/":give float vale as well and "//": give only integer

print(25.6/6)							#output: 4.2666666...
print(25.6//6)							#output: 4.0
print(-25.6/6)							#output: -4.2666...


# add(), sub(), mul()

#////must import operator

import operator
print(operator.add(5,7))			
print(operator.sub(5,7))
print(operator.mul(5,7))

print(" ")

#truediv(a,b)			:returns the flooting of argument  [a/b]
#floordiv(a,b)			:return the floor of divivsion of two argument [a//b]
#pow(a,b)				:power [a**b]
#mod(a,b)				:modulus [a%b]

print(" ")



#and_(), 					:returns 1 if both are one
#or_(), 					:returns 1 if at least one bit is 1
#xor()						:return 1 if both bits are different

import operator

a =1
b=0
print('a=1')
print('b=2')

#using and_() to show ythe bitwise and operators
print("the bitwise and of a and b is :",operator.and_(a,b))
print()


#using or_() to show ythe bitwise and operators
print("the bitwise or of a and b is :",operator.or_(a,b))
print()


#using xor_() to show ythe bitwise and operators
print("the bitwise xor of a and b is :",operator.xor(a,b))
print()




#############    			DEF COMMAND()


# to find hcf value
#method to compute gcd (recursion) :

								#hcgnive()

def hcfnaive(a,b):
	if(b==0):
		return a
	else: return hcfnaive(b,a%b)

a=60
b=48


print(" The gcd of 60 and 48 is :", end=" ")
print(hcfnaive(a,b))

print("")

def computeGCD(x,y):
	if x> y:
		small = y
	else : small = x
	for i in range(1, small+1):
		if ((x % i == 0 ) and (y % i == 0)):
			gcd = i 
	return gcd


a =45
b = 15

print("The gcd of 45 and 15 is : ", end =" ")
print(computeGCD(a,b))

print(" ")


# second type to calculate hcf:

import math 
asd = math.gcd(45, 15)
print("The gcd of 45 and 15 is : ", end =" ")
print(asd )

print()

#metod to compute gcd ( EUCLIDEAN ALGO):

def computeGCD(x,y):

	while(y):
		x,y= y, x%y
	return x

a =45
B = 90

print("the gcd of 45 and 90 is :", end=" ")
print(computeGCD(45,90))






















































































































